// Skript na vytvorenie testovacieho pou≈æ√≠vateƒæa
import fetch from 'node-fetch';

const API_URLS = ['http://localhost:5000/api', 'http://localhost:3000/api'];

async function findWorkingApiUrl() {
  for (const url of API_URLS) {
    try {
      console.log(`Testujem API na: ${url}/test`);
      const response = await fetch(`${url}/test`);
      if (response.ok) {
        console.log(`‚úÖ API je dostupn√© na: ${url}`);
        return url;
      }
    } catch (err) {
      console.log(`‚ùå API nie je dostupn√© na: ${url}`);
    }
  }
  return null;
}

async function createUser(baseUrl, email, password, name) {
  try {
    console.log(`Vytv√°ram pou≈æ√≠vateƒæa: ${email}`);
    const response = await fetch(`${baseUrl}/auth/register`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email,
        password,
        name
      })
    });
    
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Pou≈æ√≠vateƒæ bol √∫spe≈°ne vytvoren√Ω!');
      console.log('Token:', data.token);
      console.log('√ödaje:', data.user);
      return data;
    } else {
      console.log('‚ùå Chyba pri vytv√°ran√≠ pou≈æ√≠vateƒæa:', data.message);
      
      if (data.message?.includes('existuje')) {
        console.log('üîç Sk√∫≈°am prihl√°senie existuj√∫ceho pou≈æ√≠vateƒæa...');
        return await loginUser(baseUrl, email, password);
      }
      
      return null;
    }
  } catch (error) {
    console.error('Chyba:', error);
    return null;
  }
}

async function loginUser(baseUrl, email, password) {
  try {
    console.log(`Prihlasujem pou≈æ√≠vateƒæa: ${email}`);
    const response = await fetch(`${baseUrl}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email,
        password
      })
    });
    
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ Prihl√°senie √∫spe≈°n√©!');
      console.log('Token:', data.token);
      console.log('√ödaje:', data.user);
      return data;
    } else {
      console.log('‚ùå Chyba pri prihl√°sen√≠:', data.message);
      return null;
    }
  } catch (error) {
    console.error('Chyba:', error);
    return null;
  }
}

async function run() {
  try {
    // Hƒæad√°me funguj√∫ce API
    const apiUrl = await findWorkingApiUrl();
    if (!apiUrl) {
      console.error('‚ùå API nie je dostupn√©, spustite najprv server!');
      return;
    }

    // Vytvor√≠me/prihl√°sime pou≈æ√≠vateƒæa
    // ‚ö†Ô∏è Pozor: Tu s√∫ priamo zadan√© prihlasovacie √∫daje
    const email = 'design@renemoravec.sk';
    const password = 'raptor123';
    const name = 'Ren√© Moravec';
    
    await createUser(apiUrl, email, password, name);
  } catch (error) {
    console.error('Neoƒçak√°van√° chyba:', error);
  }
}

run(); 